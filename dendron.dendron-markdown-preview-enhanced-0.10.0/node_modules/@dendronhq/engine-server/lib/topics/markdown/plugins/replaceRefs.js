"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.replaceRefs = void 0;
const common_all_1 = require("@dendronhq/common-all");
const lodash_1 = __importDefault(require("lodash"));
const unist_util_visit_1 = __importDefault(require("unist-util-visit"));
function replaceRefs(options) {
    const { imageRefPrefix, wikiLink2Md, wikiLinkPrefix, wikiLinkUseId, engine, } = lodash_1.default.defaults(options, {
        refReplacements: {},
        wikiLinkPrefix: false,
    });
    function transformer(tree, _file) {
        unist_util_visit_1.default(tree, (node) => {
            if (node.type === "image") {
                // const replacement = _.get(refReplacements, node.url as string, false);
                // if (replacement) {
                //   node.url = replacement;
                // }
                if (imageRefPrefix) {
                    node.url = imageRefPrefix + node.url;
                }
            }
            if (node.type === "wikiLink") {
                const data = node.data;
                if (wikiLink2Md) {
                    data.toMd = true;
                }
                if (wikiLinkPrefix) {
                    data.prefix = wikiLinkPrefix;
                }
                if (wikiLinkUseId) {
                    data.useId = true;
                    if (!engine) {
                        throw Error(`need engine when wikiLinkUseId is set`);
                    }
                    data.note = common_all_1.DNodeUtils.getNoteByFname(data.permalink, engine, {
                        throwIfEmpty: true,
                    });
                }
            }
        });
        return tree;
    }
    return transformer;
}
exports.replaceRefs = replaceRefs;
//# sourceMappingURL=replaceRefs.js.map