import { Note } from "@dendronhq/common-all";
import _markdownit from "markdown-it";
import Token from "markdown-it/lib/token";
import { Processor } from "unified";
import { Node, Position } from "unist";
declare enum NodeType {
    code_inline = "code_inline",
    code_block = "code_block",
    fence = "fence",
    image = "image",
    hardbreak = "hardbreak",
    softbreak = "softbreak",
    text = "text",
    html_block = "html_block",
    html_inline = "html_inline"
}
export declare type MDNode = {
    nodeType: NodeType;
    openNode: Token;
    closeNode: Token;
    children: Token[];
};
export declare function md(): _markdownit;
export declare function tokens2MD(tokens: Token[]): string;
export declare function md2Tokens(txt: string): Token[];
export declare function parse(markdown: string): Node;
export declare function createNoteFromMarkdown(uri: string, eol?: string): Note;
export interface TextEdit {
    range: Position;
    newText: string;
}
export declare const applyTextEdit: (text: string, textEdit: TextEdit) => string;
export declare function getProcessor(opts?: {
    root?: string;
    renderWithOutline?: boolean;
}): Processor;
export {};
