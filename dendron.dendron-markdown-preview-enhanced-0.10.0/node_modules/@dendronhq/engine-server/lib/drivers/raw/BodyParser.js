"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BodyParser = void 0;
const common_all_1 = require("@dendronhq/common-all");
const yamljs_1 = __importDefault(require("yamljs"));
const lodash_1 = __importDefault(require("lodash"));
class BodyParser {
    parseSchema(data, opts) {
        const { fname, node } = opts;
        data = lodash_1.default.trim(data, "` \\\n");
        const schemaOpts = yamljs_1.default.parse(data);
        const schemaProps = schemaOpts.map((o) => {
            const nodes = node.toRawPropsRecursive();
            const nodeOrig = lodash_1.default.find(nodes, { id: o.id });
            if (nodeOrig) {
                o = lodash_1.default.merge(o, lodash_1.default.pick(nodeOrig, "parent"));
            }
            else {
                // new node
                o = lodash_1.default.merge(o, { parent: "root" });
            }
            return common_all_1.Schema.createRawProps({ ...o, fname });
        });
        return schemaProps;
    }
    parseNote(_data) {
        // TODO
        return [];
    }
}
exports.BodyParser = BodyParser;
//# sourceMappingURL=BodyParser.js.map