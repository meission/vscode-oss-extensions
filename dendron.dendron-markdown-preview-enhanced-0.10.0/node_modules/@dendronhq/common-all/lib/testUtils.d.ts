/// <reference types="jest" />
import { DNode } from "./node";
import { DNodeData, DNodeRawProps, RawPropsOpts } from "./types";
declare function omitEntropicProps(obj: DNodeRawProps, tsOnly?: boolean): Pick<Required<import("./types").DNodeRawOpts<DNodeData>>, "desc" | "title" | "stub" | "fname" | "body" | "data" | "custom">;
/**
 * Remove properties that change
 * @param n1
 */
export declare function toSnapshotProps(n1: DNode, opts?: RawPropsOpts): {
    parent: string;
    children: string[];
    desc: string;
    title: string;
    stub: boolean;
    fname: string;
    body: string;
    data: DNodeData;
    custom: any;
};
export declare function expectSnapshot(expect: jest.Expect, name: string, n1: DNode<DNodeData> | DNode<DNodeData>[]): void;
export declare function expectNodeEqual(expect: jest.Expect, n1: DNode<DNodeData>, n2: DNode<DNodeData>): void;
export declare const testUtilsCommonAll: {
    expectNodeEqual: typeof expectNodeEqual;
    expectSnapshot: typeof expectSnapshot;
    toSnapshotProps: typeof toSnapshotProps;
    omitEntropicProps: typeof omitEntropicProps;
};
export {};
